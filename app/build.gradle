apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.0"
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "ch.epfl.sweng.erpa"
        minSdkVersion 24 // https://developer.android.com/reference/java/util/Optional
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['toothpick_registry_package_name': 'ch.epfl.sweng.erpa.smoothie']
            }
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'InvalidPackage' // Toothpick runtime includes references to javax.inject which have
                                 // runtime retention even if they're not used since we use registries
                                 // for injection instead of reflection.
    }
}

dependencies {
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'
    annotationProcessor 'com.github.stephanenicolas.toothpick:toothpick-compiler:1.1.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.stephanenicolas.toothpick:smoothie:1.1.3'
    implementation 'com.github.stephanenicolas.toothpick:toothpick-runtime:1.1.3'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'com.github.stephanenicolas.toothpick:toothpick-testing:1.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.22.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
